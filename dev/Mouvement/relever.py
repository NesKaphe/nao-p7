# Choregraphe simplified export in Python.
from naoqi import ALProxy
"""
def move(motion) :

	names = list()
	times = list()
	keys = list()

	names.append("HeadPitch")
	times.append([ 0.20000, 1.00000, 3.68000, 5.12000, 6.40000, 8.08000, 8.16000])
	keys.append([ -0.06907, -0.04453, -0.01385, 0.00149, -0.03839, -0.02152, -0.02152])

	names.append("HeadYaw")
	times.append([ 0.20000, 1.00000, 3.68000, 5.12000, 6.40000, 8.08000, 8.16000])
	keys.append([ -0.00464, -0.00311, -0.00464, 0.00456, 0.00149, 0.00303, 0.00303])

	names.append("LAnklePitch")
	times.append([ 0.20000, 1.00000, 3.68000, 5.12000, 6.40000, 8.08000, 8.16000])
	keys.append([ 0.69486, 0.48470, -0.31758, -0.39735, -0.94345, -0.08595, -0.08595])

	names.append("LAnkleRoll")
	times.append([ 0.20000, 1.00000, 3.68000, 5.12000, 6.40000, 8.08000, 8.16000])
	keys.append([ -0.08433, -0.01376, 0.01845, -0.24386, -0.11654, -0.09200, -0.09200])

	names.append("LElbowRoll")
	times.append([ 0.20000, 1.00000, 3.68000, 5.12000, 6.40000, 8.08000, 8.16000])
	keys.append([ -0.81911, -0.03984, -0.03831, -0.05058, -0.04751, -0.04138, -0.04138])

	names.append("LElbowYaw")
	times.append([ 0.20000, 1.00000, 3.68000, 5.12000, 6.40000, 8.08000, 8.16000])
	keys.append([ 0.52765, -1.22417, -0.95726, -0.52927, -0.75630, -0.96033, -0.96033])

	names.append("LHand")
	times.append([ 0.20000, 1.00000, 3.68000, 5.12000, 6.40000, 8.08000, 8.16000])
	keys.append([ 0.00000, 0.00001, 0.00001, 0.00001, 0.00001, 0.00001, 0.00001])

	names.append("LHipPitch")
	times.append([ 0.20000, 1.00000, 3.68000, 5.12000, 6.40000, 8.08000, 8.16000])
	keys.append([ -1.40970, -1.53242, -1.52629, -1.52629, -0.54453, 0.02765, 0.02765])

	names.append("LHipRoll")
	times.append([ 0.20000, 1.00000, 3.68000, 5.12000, 6.40000, 8.08000, 8.16000])
	keys.append([ -0.34511, -0.36045, 0.19026, 0.27463, 0.16571, 0.07061, 0.07061])

	names.append("LHipYawPitch")
	times.append([ 0.20000, 1.00000, 3.68000, 5.12000, 6.40000, 8.08000, 8.16000])
	keys.append([ -1.14529, -1.14529, -0.87587, -0.52765, -0.36198, -0.03677, -0.03677])

	names.append("LKneePitch")
	times.append([ 0.20000, 1.00000, 3.68000, 5.12000, 6.40000, 8.08000, 8.16000])
	keys.append([ 0.62276, 1.11057, 2.11255, 2.10768, 1.59072, 0.14569, 0.14569])

	names.append("LShoulderPitch")
	times.append([ 0.20000, 1.00000, 3.68000, 5.12000, 6.40000, 8.08000, 8.16000])
	keys.append([ -0.29917, 0.20858, 0.75162, 0.35891, 0.96945, 1.46953, 1.46953])

	names.append("LShoulderRoll")
	times.append([ 0.20000, 1.00000, 3.68000, 5.12000, 6.40000, 8.08000, 8.16000])
	keys.append([ 0.03677, -0.18259, 0.52612, 0.11194, 0.16563, 0.21318, 0.21318])

	names.append("LWristYaw")
	times.append([ 0.20000, 1.00000, 3.68000, 5.12000, 6.40000, 8.08000, 8.16000])
	keys.append([ 0.56600, 0.54606, 0.47396, 1.81162, 1.81008, 1.79013, 1.79013])

	names.append("RAnklePitch")
	times.append([ 0.20000, 1.00000, 3.68000, 5.12000, 6.40000, 8.08000, 8.16000])
	keys.append([ -1.18574, -1.18630, -1.18630, -0.46629, -0.75315, -0.11501, -0.11501])

	names.append("RAnkleRoll")
	times.append([ 0.20000, 1.00000, 3.68000, 5.12000, 6.40000, 8.08000, 8.16000])
	keys.append([ 0.05066, 0.08288, -0.07819, -0.06899, 0.05833, 0.11049, 0.11049])

	names.append("RElbowRoll")
	times.append([ 0.20000, 1.00000, 3.68000, 5.12000, 6.40000, 8.08000, 8.16000])
	keys.append([ 0.05680, 0.08134, 0.08748, 0.03686, 0.07061, 0.11509, 0.11509])

	names.append("RElbowYaw")
	times.append([ 0.20000, 1.00000, 3.68000, 5.12000, 6.40000, 8.08000, 8.16000])
	keys.append([ 0.38039, 0.37425, 0.87741, 0.97712, 0.97558, 0.97251, 0.97251])

	names.append("RHand")
	times.append([ 0.20000, 1.00000, 3.68000, 5.12000, 6.40000, 8.08000, 8.16000])
	keys.append([ 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000])

	names.append("RHipPitch")
	times.append([ 0.20000, 1.00000, 3.68000, 5.12000, 6.40000, 8.08000, 8.16000])
	keys.append([ -0.72256, -0.86368, -0.42343, -1.44200, -0.62438, 0.05978, 0.06285])

	names.append("RHipRoll")
	times.append([ 0.20000, 1.00000, 3.68000, 5.12000, 6.40000, 8.08000, 8.16000])
	keys.append([ 0.36053, 0.31911, 0.25315, 0.15191, 0.02305, -0.10734, -0.10887])

	names.append("RHipYawPitch")
	times.append([ 0.20000, 1.00000, 3.68000, 5.12000, 6.40000, 8.08000, 8.16000])
	keys.append([ -1.14529, -1.14529, -0.87587, -0.52765, -0.36198, -0.03677, -0.03677])

	names.append("RKneePitch")
	times.append([ 0.20000, 1.00000, 3.68000, 5.12000, 6.40000, 8.08000, 8.16000])
	keys.append([ 1.96816, 2.11255, 2.11255, 2.10008, 1.52330, 0.11969, 0.11969])

	names.append("RShoulderPitch")
	times.append([ 0.20000, 1.00000, 3.68000, 5.12000, 6.40000, 8.08000, 8.16000])
	keys.append([ 0.35440, 0.32372, 0.98794, 0.32832, 0.99101, 1.56779, 1.56779])

	names.append("RShoulderRoll")
	times.append([ 0.20000, 1.00000, 3.68000, 5.12000, 6.40000, 8.08000, 8.16000])
	keys.append([ 0.03524, 0.10274, -0.28690, -0.05220, -0.10282, -0.17645, -0.17492])

	names.append("RWristYaw")
	times.append([ 0.20000, 1.00000, 3.68000, 5.12000, 6.40000, 8.08000, 8.16000])
	keys.append([ -0.17338, -0.17338, -0.35286, -0.17492, 0.32210, 0.59822, 0.59822])

	try:

	  motion.angleInterpolation(names, keys, times, True);
	except BaseException, err:
	  print err
"""
"""
# Choregraphe bezier export in Python.
from naoqi import ALProxy
names = list()
times = list()
keys = list()

def move(motion) :

	names.append("HeadPitch")
	times.append([ 0.20000, 1.00000, 3.68000, 5.12000, 6.40000, 8.08000, 8.16000])
	keys.append([ [ -0.06907, [ 3, -0.06667, 0.00000], [ 3, 0.26667, 0.00000]], [ -0.04453, [ 3, -0.26667, -0.00423], [ 3, 0.89333, 0.01418]], [ -0.01385, [ 3, -0.89333, -0.00998], [ 3, 0.48000, 0.00536]], [ 0.00149, [ 3, -0.48000, 0.00000], [ 3, 0.42667, 0.00000]], [ -0.03839, [ 3, -0.42667, 0.00000], [ 3, 0.56000, 0.00000]], [ -0.02152, [ 3, -0.56000, 0.00000], [ 3, 0.02667, 0.00000]], [ -0.02152, [ 3, -0.02667, 0.00000], [ 3, 0.00000, 0.00000]]])

	names.append("HeadYaw")
	times.append([ 0.20000, 1.00000, 3.68000, 5.12000, 6.40000, 8.08000, 8.16000])
	keys.append([ [ -0.00464, [ 3, -0.06667, 0.00000], [ 3, 0.26667, 0.00000]], [ -0.00311, [ 3, -0.26667, 0.00000], [ 3, 0.89333, 0.00000]], [ -0.00464, [ 3, -0.89333, 0.00000], [ 3, 0.48000, 0.00000]], [ 0.00456, [ 3, -0.48000, 0.00000], [ 3, 0.42667, 0.00000]], [ 0.00149, [ 3, -0.42667, 0.00000], [ 3, 0.56000, 0.00000]], [ 0.00303, [ 3, -0.56000, 0.00000], [ 3, 0.02667, 0.00000]], [ 0.00303, [ 3, -0.02667, 0.00000], [ 3, 0.00000, 0.00000]]])

	names.append("LAnklePitch")
	times.append([ 0.20000, 1.00000, 3.68000, 5.12000, 6.40000, 8.08000, 8.16000])
	keys.append([ [ 0.69486, [ 3, -0.06667, 0.00000], [ 3, 0.26667, 0.00000]], [ 0.48470, [ 3, -0.26667, 0.07758], [ 3, 0.89333, -0.25990]], [ -0.31758, [ 3, -0.89333, 0.14846], [ 3, 0.48000, -0.07977]], [ -0.39735, [ 3, -0.48000, 0.07977], [ 3, 0.42667, -0.07091]], [ -0.94345, [ 3, -0.42667, 0.00000], [ 3, 0.56000, 0.00000]], [ -0.08595, [ 3, -0.56000, 0.00000], [ 3, 0.02667, 0.00000]], [ -0.08595, [ 3, -0.02667, 0.00000], [ 3, 0.00000, 0.00000]]])

	names.append("LAnkleRoll")
	times.append([ 0.20000, 1.00000, 3.68000, 5.12000, 6.40000, 8.08000, 8.16000])
	keys.append([ [ -0.08433, [ 3, -0.06667, 0.00000], [ 3, 0.26667, 0.00000]], [ -0.01376, [ 3, -0.26667, -0.00788], [ 3, 0.89333, 0.02638]], [ 0.01845, [ 3, -0.89333, 0.00000], [ 3, 0.48000, 0.00000]], [ -0.24386, [ 3, -0.48000, 0.00000], [ 3, 0.42667, 0.00000]], [ -0.11654, [ 3, -0.42667, -0.01870], [ 3, 0.56000, 0.02454]], [ -0.09200, [ 3, -0.56000, 0.00000], [ 3, 0.02667, 0.00000]], [ -0.09200, [ 3, -0.02667, 0.00000], [ 3, 0.00000, 0.00000]]])

	names.append("LElbowRoll")
	times.append([ 0.20000, 1.00000, 3.68000, 5.12000, 6.40000, 8.08000, 8.16000])
	keys.append([ [ -0.81911, [ 3, -0.06667, 0.00000], [ 3, 0.26667, 0.00000]], [ -0.03984, [ 3, -0.26667, -0.00046], [ 3, 0.89333, 0.00153]], [ -0.03831, [ 3, -0.89333, 0.00000], [ 3, 0.48000, 0.00000]], [ -0.05058, [ 3, -0.48000, 0.00000], [ 3, 0.42667, 0.00000]], [ -0.04751, [ 3, -0.42667, -0.00133], [ 3, 0.56000, 0.00174]], [ -0.04138, [ 3, -0.56000, 0.00000], [ 3, 0.02667, 0.00000]], [ -0.04138, [ 3, -0.02667, 0.00000], [ 3, 0.00000, 0.00000]]])

	names.append("LElbowYaw")
	times.append([ 0.20000, 1.00000, 3.68000, 5.12000, 6.40000, 8.08000, 8.16000])
	keys.append([ [ 0.52765, [ 3, -0.06667, 0.00000], [ 3, 0.26667, 0.00000]], [ -1.22417, [ 3, -0.26667, 0.00000], [ 3, 0.89333, 0.00000]], [ -0.95726, [ 3, -0.89333, -0.15067], [ 3, 0.48000, 0.08096]], [ -0.52927, [ 3, -0.48000, 0.00000], [ 3, 0.42667, 0.00000]], [ -0.75630, [ 3, -0.42667, 0.06213], [ 3, 0.56000, -0.08155]], [ -0.96033, [ 3, -0.56000, 0.00000], [ 3, 0.02667, 0.00000]], [ -0.96033, [ 3, -0.02667, 0.00000], [ 3, 0.00000, 0.00000]]])

	names.append("LHand")
	times.append([ 0.20000, 0.92000, 3.68000, 5.16000, 6.48000, 8.08000, 8.16000])
	keys.append([ [ 0.00000, [ 3, -0.06667, 0.00000], [ 3, 0.24000, 0.00000]], [ 0.00000, [ 3, -0.24000, 0.00000], [ 3, 0.92000, 0.00000]], [ 0.00000, [ 3, -0.92000, 0.00000], [ 3, 0.49333, 0.00000]], [ 0.00000, [ 3, -0.49333, 0.00000], [ 3, 0.44000, 0.00000]], [ 0.00000, [ 3, -0.44000, 0.00000], [ 3, 0.53333, 0.00000]], [ 0.00000, [ 3, -0.53333, 0.00000], [ 3, 0.02667, 0.00000]], [ 0.00000, [ 3, -0.02667, 0.00000], [ 3, 0.00000, 0.00000]]])

	names.append("LHipPitch")
	times.append([ 0.20000, 1.00000, 3.68000, 5.12000, 6.40000, 8.08000, 8.16000])
	keys.append([ [ -1.40970, [ 3, -0.06667, 0.00000], [ 3, 0.26667, 0.00000]], [ -1.53242, [ 3, -0.26667, 0.00000], [ 3, 0.89333, 0.00000]], [ -1.52629, [ 3, -0.89333, 0.00000], [ 3, 0.48000, 0.00000]], [ -1.52629, [ 3, -0.48000, 0.00000], [ 3, 0.42667, 0.00000]], [ -0.54453, [ 3, -0.42667, -0.22399], [ 3, 0.56000, 0.29399]], [ 0.02765, [ 3, -0.56000, 0.00000], [ 3, 0.02667, 0.00000]], [ 0.02765, [ 3, -0.02667, 0.00000], [ 3, 0.00000, 0.00000]]])

	names.append("LHipRoll")
	times.append([ 0.20000, 1.00000, 3.68000, 5.12000, 6.40000, 8.08000, 8.16000])
	keys.append([ [ -0.34511, [ 3, -0.06667, 0.00000], [ 3, 0.26667, 0.00000]], [ -0.36045, [ 3, -0.26667, 0.00000], [ 3, 0.89333, 0.00000]], [ 0.19026, [ 3, -0.89333, -0.13770], [ 3, 0.48000, 0.07399]], [ 0.27463, [ 3, -0.48000, 0.00000], [ 3, 0.42667, 0.00000]], [ 0.16571, [ 3, -0.42667, 0.02941], [ 3, 0.56000, -0.03860]], [ 0.07061, [ 3, -0.56000, 0.00000], [ 3, 0.02667, 0.00000]], [ 0.07061, [ 3, -0.02667, 0.00000], [ 3, 0.00000, 0.00000]]])

	names.append("LHipYawPitch")
	times.append([ 0.20000, 1.00000, 3.68000, 5.12000, 6.40000, 8.08000, 8.16000])
	keys.append([ [ -1.14529, [ 3, -0.06667, 0.00000], [ 3, 0.26667, 0.00000]], [ -1.14529, [ 3, -0.26667, 0.00000], [ 3, 0.89333, 0.00000]], [ -0.87587, [ 3, -0.89333, -0.13392], [ 3, 0.48000, 0.07196]], [ -0.52765, [ 3, -0.48000, -0.09069], [ 3, 0.42667, 0.08061]], [ -0.36198, [ 3, -0.42667, -0.07076], [ 3, 0.56000, 0.09287]], [ -0.03677, [ 3, -0.56000, 0.00000], [ 3, 0.02667, 0.00000]], [ -0.03677, [ 3, -0.02667, 0.00000], [ 3, 0.00000, 0.00000]]])

	names.append("LKneePitch")
	times.append([ 0.20000, 1.00000, 3.68000, 5.12000, 6.40000, 8.08000, 8.16000])
	keys.append([ [ 0.62276, [ 3, -0.06667, 0.00000], [ 3, 0.26667, 0.00000]], [ 1.11057, [ 3, -0.26667, -0.11416], [ 3, 0.89333, 0.38244]], [ 2.11255, [ 3, -0.89333, 0.00000], [ 3, 0.48000, 0.00000]], [ 2.10768, [ 3, -0.48000, 0.00487], [ 3, 0.42667, -0.00433]], [ 1.59072, [ 3, -0.42667, 0.28281], [ 3, 0.56000, -0.37119]], [ 0.14569, [ 3, -0.56000, 0.00000], [ 3, 0.02667, 0.00000]], [ 0.14569, [ 3, -0.02667, 0.00000], [ 3, 0.00000, 0.00000]]])

	names.append("LShoulderPitch")
	times.append([ 0.20000, 1.00000, 3.68000, 5.12000, 6.40000, 8.08000, 8.16000])
	keys.append([ [ -0.29917, [ 3, -0.06667, 0.00000], [ 3, 0.26667, 0.00000]], [ 0.20858, [ 3, -0.26667, -0.08052], [ 3, 0.89333, 0.26974]], [ 0.75162, [ 3, -0.89333, 0.00000], [ 3, 0.48000, 0.00000]], [ 0.35891, [ 3, -0.48000, 0.00000], [ 3, 0.42667, 0.00000]], [ 0.96945, [ 3, -0.42667, -0.16009], [ 3, 0.56000, 0.21012]], [ 1.46953, [ 3, -0.56000, 0.00000], [ 3, 0.02667, 0.00000]], [ 1.46953, [ 3, -0.02667, 0.00000], [ 3, 0.00000, 0.00000]]])

	names.append("LShoulderRoll")
	times.append([ 0.20000, 1.00000, 3.68000, 5.12000, 6.40000, 8.08000, 8.16000])
	keys.append([ [ 0.03677, [ 3, -0.06667, 0.00000], [ 3, 0.26667, 0.00000]], [ -0.18259, [ 3, -0.26667, 0.00000], [ 3, 0.89333, 0.00000]], [ 0.52612, [ 3, -0.89333, 0.00000], [ 3, 0.48000, 0.00000]], [ 0.11194, [ 3, -0.48000, 0.00000], [ 3, 0.42667, 0.00000]], [ 0.16563, [ 3, -0.42667, -0.01459], [ 3, 0.56000, 0.01915]], [ 0.21318, [ 3, -0.56000, 0.00000], [ 3, 0.02667, 0.00000]], [ 0.21318, [ 3, -0.02667, 0.00000], [ 3, 0.00000, 0.00000]]])

	names.append("LWristYaw")
	times.append([ 0.20000, 1.00000, 3.68000, 5.12000, 6.40000, 8.08000, 8.16000])
	keys.append([ [ 0.56600, [ 3, -0.06667, 0.00000], [ 3, 0.26667, 0.00000]], [ 0.54606, [ 3, -0.26667, 0.00705], [ 3, 0.89333, -0.02363]], [ 0.47396, [ 3, -0.89333, 0.00000], [ 3, 0.48000, 0.00000]], [ 1.81162, [ 3, -0.48000, 0.00000], [ 3, 0.42667, 0.00000]], [ 1.81008, [ 3, -0.42667, 0.00154], [ 3, 0.56000, -0.00202]], [ 1.79013, [ 3, -0.56000, 0.00000], [ 3, 0.02667, 0.00000]], [ 1.79013, [ 3, -0.02667, 0.00000], [ 3, 0.00000, 0.00000]]])

	names.append("RAnklePitch")
	times.append([ 0.20000, 1.00000, 3.68000, 5.12000, 6.40000, 8.08000, 8.16000])
	keys.append([ [ -1.18574, [ 3, -0.06667, 0.00000], [ 3, 0.26667, 0.00000]], [ -1.18630, [ 3, -0.26667, 0.00000], [ 3, 0.89333, 0.00000]], [ -1.18630, [ 3, -0.89333, 0.00000], [ 3, 0.48000, 0.00000]], [ -0.46629, [ 3, -0.48000, 0.00000], [ 3, 0.42667, 0.00000]], [ -0.75315, [ 3, -0.42667, 0.00000], [ 3, 0.56000, 0.00000]], [ -0.11501, [ 3, -0.56000, 0.00000], [ 3, 0.02667, 0.00000]], [ -0.11501, [ 3, -0.02667, 0.00000], [ 3, 0.00000, 0.00000]]])

	names.append("RAnkleRoll")
	times.append([ 0.20000, 1.00000, 3.68000, 5.12000, 6.40000, 8.08000, 8.16000])
	keys.append([ [ 0.05066, [ 3, -0.06667, 0.00000], [ 3, 0.26667, 0.00000]], [ 0.08288, [ 3, -0.26667, 0.00000], [ 3, 0.89333, 0.00000]], [ -0.07819, [ 3, -0.89333, 0.00000], [ 3, 0.48000, 0.00000]], [ -0.06899, [ 3, -0.48000, -0.00920], [ 3, 0.42667, 0.00818]], [ 0.05833, [ 3, -0.42667, -0.02587], [ 3, 0.56000, 0.03396]], [ 0.11049, [ 3, -0.56000, 0.00000], [ 3, 0.02667, 0.00000]], [ 0.11049, [ 3, -0.02667, 0.00000], [ 3, 0.00000, 0.00000]]])

	names.append("RElbowRoll")
	times.append([ 0.20000, 1.00000, 3.68000, 5.12000, 6.40000, 8.08000, 8.16000])
	keys.append([ [ 0.05680, [ 3, -0.06667, 0.00000], [ 3, 0.26667, 0.00000]], [ 0.08134, [ 3, -0.26667, -0.00183], [ 3, 0.89333, 0.00614]], [ 0.08748, [ 3, -0.89333, 0.00000], [ 3, 0.48000, 0.00000]], [ 0.03686, [ 3, -0.48000, 0.00000], [ 3, 0.42667, 0.00000]], [ 0.07061, [ 3, -0.42667, -0.01128], [ 3, 0.56000, 0.01480]], [ 0.11509, [ 3, -0.56000, 0.00000], [ 3, 0.02667, 0.00000]], [ 0.11509, [ 3, -0.02667, 0.00000], [ 3, 0.00000, 0.00000]]])

	names.append("RElbowYaw")
	times.append([ 0.20000, 1.00000, 3.68000, 5.12000, 6.40000, 8.08000, 8.16000])
	keys.append([ [ 0.38039, [ 3, -0.06667, 0.00000], [ 3, 0.26667, 0.00000]], [ 0.37425, [ 3, -0.26667, 0.00000], [ 3, 0.89333, 0.00000]], [ 0.87741, [ 3, -0.89333, -0.13072], [ 3, 0.48000, 0.07024]], [ 0.97712, [ 3, -0.48000, 0.00000], [ 3, 0.42667, 0.00000]], [ 0.97558, [ 3, -0.42667, 0.00066], [ 3, 0.56000, -0.00087]], [ 0.97251, [ 3, -0.56000, 0.00000], [ 3, 0.02667, 0.00000]], [ 0.97251, [ 3, -0.02667, 0.00000], [ 3, 0.00000, 0.00000]]])

	names.append("RHand")
	times.append([ 0.20000, 1.00000, 3.68000, 5.12000, 6.40000, 8.08000, 8.16000])
	keys.append([ [ 0.00546, [ 3, -0.06667, 0.00000], [ 3, 0.26667, 0.00000]], [ 0.00547, [ 3, -0.26667, -0.00001], [ 3, 0.89333, 0.00002]], [ 0.00553, [ 3, -0.89333, -0.00002], [ 3, 0.48000, 0.00001]], [ 0.00557, [ 3, -0.48000, -0.00004], [ 3, 0.42667, 0.00004]], [ 0.01127, [ 3, -0.42667, -0.00158], [ 3, 0.56000, 0.00207]], [ 0.01650, [ 3, -0.56000, 0.00000], [ 3, 0.02667, 0.00000]], [ 0.01650, [ 3, -0.02667, 0.00000], [ 3, 0.00000, 0.00000]]])

	names.append("RHipPitch")
	times.append([ 0.20000, 1.00000, 3.68000, 5.12000, 6.40000, 8.08000, 8.16000])
	keys.append([ [ -0.72256, [ 3, -0.06667, 0.00000], [ 3, 0.26667, 0.00000]], [ -0.86368, [ 3, -0.26667, 0.00000], [ 3, 0.89333, 0.00000]], [ -0.42343, [ 3, -0.89333, 0.00000], [ 3, 0.48000, 0.00000]], [ -1.44200, [ 3, -0.48000, 0.00000], [ 3, 0.42667, 0.00000]], [ -0.62438, [ 3, -0.42667, -0.21647], [ 3, 0.56000, 0.28412]], [ 0.05978, [ 3, -0.56000, -0.06443], [ 3, 0.02667, 0.00307]], [ 0.06285, [ 3, -0.02667, 0.00000], [ 3, 0.00000, 0.00000]]])

	names.append("RHipRoll")
	times.append([ 0.20000, 1.00000, 3.68000, 5.12000, 6.40000, 8.08000, 8.16000])
	keys.append([ [ 0.36053, [ 3, -0.06667, 0.00000], [ 3, 0.26667, 0.00000]], [ 0.31911, [ 3, -0.26667, 0.00823], [ 3, 0.89333, -0.02757]], [ 0.25315, [ 3, -0.89333, 0.03626], [ 3, 0.48000, -0.01948]], [ 0.15191, [ 3, -0.48000, 0.04061], [ 3, 0.42667, -0.03609]], [ 0.02305, [ 3, -0.42667, 0.03737], [ 3, 0.56000, -0.04905]], [ -0.10734, [ 3, -0.56000, 0.03221], [ 3, 0.02667, -0.00153]], [ -0.10887, [ 3, -0.02667, 0.00000], [ 3, 0.00000, 0.00000]]])

	names.append("RHipYawPitch")
	times.append([ 0.20000, 1.00000, 3.68000, 5.12000, 6.40000, 8.08000, 8.16000])
	keys.append([ [ -1.14529, [ 3, -0.06667, 0.00000], [ 3, 0.26667, 0.00000]], [ -1.14529, [ 3, -0.26667, 0.00000], [ 3, 0.89333, 0.00000]], [ -0.87587, [ 3, -0.89333, -0.13392], [ 3, 0.48000, 0.07196]], [ -0.52765, [ 3, -0.48000, -0.09069], [ 3, 0.42667, 0.08061]], [ -0.36198, [ 3, -0.42667, -0.07076], [ 3, 0.56000, 0.09287]], [ -0.03677, [ 3, -0.56000, 0.00000], [ 3, 0.02667, 0.00000]], [ -0.03677, [ 3, -0.02667, 0.00000], [ 3, 0.00000, 0.00000]]])

	names.append("RKneePitch")
	times.append([ 0.20000, 1.00000, 3.68000, 5.12000, 6.40000, 8.08000, 8.16000])
	keys.append([ [ 1.96816, [ 3, -0.06667, 0.00000], [ 3, 0.26667, 0.00000]], [ 2.11255, [ 3, -0.26667, 0.00000], [ 3, 0.89333, 0.00000]], [ 2.11255, [ 3, -0.89333, 0.00000], [ 3, 0.48000, 0.00000]], [ 2.10008, [ 3, -0.48000, 0.01246], [ 3, 0.42667, -0.01108]], [ 1.52330, [ 3, -0.42667, 0.28546], [ 3, 0.56000, -0.37467]], [ 0.11969, [ 3, -0.56000, 0.00000], [ 3, 0.02667, 0.00000]], [ 0.11969, [ 3, -0.02667, 0.00000], [ 3, 0.00000, 0.00000]]])

	names.append("RShoulderPitch")
	times.append([ 0.20000, 1.00000, 3.68000, 5.12000, 6.40000, 8.08000, 8.16000])
	keys.append([ [ 0.35440, [ 3, -0.06667, 0.00000], [ 3, 0.26667, 0.00000]], [ 0.32372, [ 3, -0.26667, 0.00000], [ 3, 0.89333, 0.00000]], [ 0.98794, [ 3, -0.89333, 0.00000], [ 3, 0.48000, 0.00000]], [ 0.32832, [ 3, -0.48000, 0.00000], [ 3, 0.42667, 0.00000]], [ 0.99101, [ 3, -0.42667, -0.17866], [ 3, 0.56000, 0.23449]], [ 1.56779, [ 3, -0.56000, 0.00000], [ 3, 0.02667, 0.00000]], [ 1.56779, [ 3, -0.02667, 0.00000], [ 3, 0.00000, 0.00000]]])

	names.append("RShoulderRoll")
	times.append([ 0.20000, 1.00000, 3.68000, 5.12000, 6.40000, 8.08000, 8.16000])
	keys.append([ [ 0.03524, [ 3, -0.06667, 0.00000], [ 3, 0.26667, 0.00000]], [ 0.10274, [ 3, -0.26667, 0.00000], [ 3, 0.89333, 0.00000]], [ -0.28690, [ 3, -0.89333, 0.00000], [ 3, 0.48000, 0.00000]], [ -0.05220, [ 3, -0.48000, 0.00000], [ 3, 0.42667, 0.00000]], [ -0.10282, [ 3, -0.42667, 0.01791], [ 3, 0.56000, -0.02351]], [ -0.17645, [ 3, -0.56000, 0.00000], [ 3, 0.02667, 0.00000]], [ -0.17492, [ 3, -0.02667, 0.00000], [ 3, 0.00000, 0.00000]]])

	names.append("RWristYaw")
	times.append([ 0.20000, 1.00000, 3.68000, 5.12000, 6.40000, 8.08000, 8.16000])
	keys.append([ [ -0.17338, [ 3, -0.06667, 0.00000], [ 3, 0.26667, 0.00000]], [ -0.17338, [ 3, -0.26667, 0.00000], [ 3, 0.89333, 0.00000]], [ -0.35286, [ 3, -0.89333, 0.00000], [ 3, 0.48000, 0.00000]], [ -0.17492, [ 3, -0.48000, -0.11911], [ 3, 0.42667, 0.10588]], [ 0.32210, [ 3, -0.42667, -0.11144], [ 3, 0.56000, 0.14627]], [ 0.59822, [ 3, -0.56000, 0.00000], [ 3, 0.02667, 0.00000]], [ 0.59822, [ 3, -0.02667, 0.00000], [ 3, 0.00000, 0.00000]]])

	try:

	  motion.angleInterpolationBezier(names, times, keys);
	except BaseException, err:
	  print err
"""

# Choregraphe simplified export in Python.
from naoqi import ALProxy
names = list()
times = list()
keys = list()

def move(motion) :

	names.append("HeadPitch")
	times.append([ 0.04000, 0.76000, 1.56000, 2.20000, 2.92000, 3.64000, 4.52000, 5.64000, 6.40000, 8.28000])
	keys.append([ 0.06899, 0.08740, 0.08740, 0.08126, 0.09046, 0.09200, 0.09046, 0.01070, 0.00916, -0.02152])

	names.append("HeadYaw")
	times.append([ 0.04000, 0.76000, 1.56000, 2.20000, 2.92000, 3.64000, 4.52000, 5.64000, 6.40000, 8.28000])
	keys.append([ 0.32210, 0.31750, 0.31750, 0.30216, 0.29142, 0.27915, 0.28221, -0.00311, -0.00925, 0.00303])

	names.append("LAnklePitch")
	times.append([ 0.04000, 0.76000, 1.56000, 2.20000, 2.92000, 3.64000, 4.52000, 5.64000, 6.40000, 8.28000])
	keys.append([ 0.70867, 0.91882, 0.91576, -0.03686, -0.16725, -0.25008, -0.76858, -0.39735, -0.73483, -0.08595])

	names.append("LAnkleRoll")
	times.append([ 0.04000, 0.76000, 1.56000, 2.20000, 2.92000, 3.64000, 4.52000, 5.64000, 6.40000, 8.28000])
	keys.append([ 0.05220, 0.05373, 0.05373, 0.08288, 0.25162, 0.40348, 0.19793, -0.24386, -0.11194, -0.09200])

	names.append("LElbowRoll")
	times.append([ 0.04000, 0.76000, 1.56000, 2.20000, 2.92000, 3.64000, 4.52000, 5.64000, 6.40000, 8.28000])
	keys.append([ -0.51692, -0.03491, -0.03491, -0.03491, -0.28528, -0.27608, -0.28528, -0.05825, -0.04598, -0.04138])

	names.append("LElbowYaw")
	times.append([ 0.04000, 0.76000, 1.56000, 2.20000, 2.92000, 3.64000, 4.52000, 5.64000, 6.40000, 8.28000])
	keys.append([ 0.11347, -1.29627, -1.29474, -1.29320, -0.51853, -0.50780, -0.52160, -0.61364, -0.76244, -0.96033])

	names.append("LHand")
	times.append([ 0.04000, 0.76000, 1.56000, 2.20000, 2.92000, 3.64000, 4.52000, 5.64000, 6.40000, 8.28000])
	keys.append([ 0.00051, 0.00303, 0.00304, 0.00306, 0.00323, 0.00323, 0.00323, 0.01666, 0.00013, 0.00000])

	names.append("LHipPitch")
	times.append([ 0.04000, 0.76000, 1.56000, 2.20000, 2.92000, 3.64000, 4.52000, 5.64000, 6.40000, 8.28000])
	keys.append([ -1.53589, -1.20261, -1.20108, -1.53589, -1.53589, -1.31920, -1.53589, -1.52782, -0.54760, 0.02765])

	names.append("LHipRoll")
	times.append([ 0.04000, 0.76000, 1.56000, 2.20000, 2.92000, 3.64000, 4.52000, 5.64000, 6.40000, 8.28000])
	keys.append([ -0.34357, -0.34511, -0.34357, -0.35891, -0.36352, -0.36352, -0.19631, 0.27463, 0.16571, 0.07061])

	names.append("LHipYawPitch")
	times.append([ 0.04000, 0.76000, 1.56000, 2.20000, 2.92000, 3.64000, 4.52000, 5.64000, 6.40000, 8.28000])
	keys.append([ -1.14529, -1.14529, -1.14529, -1.07683, -1.14529, -1.06149, 0.08134, -0.52765, -0.36045, -0.03677])

	names.append("LKneePitch")
	times.append([ 0.04000, 0.76000, 1.56000, 2.20000, 2.92000, 3.64000, 4.52000, 5.64000, 6.40000, 8.28000])
	keys.append([ 0.85133, 0.42181, 0.42027, 1.72571, 2.11255, 2.10767, 2.11255, 2.11228, 1.59225, 0.14569])

	names.append("LShoulderPitch")
	times.append([ 0.04000, 0.76000, 1.56000, 2.20000, 2.92000, 3.64000, 4.52000, 5.64000, 6.40000, 8.28000])
	keys.append([ -0.05527, 0.59208, 0.56294, 0.57521, 0.33437, 0.51998, 0.26074, 2.07086, 1.02007, 1.46953])

	names.append("LShoulderRoll")
	times.append([ 0.04000, 0.76000, 1.56000, 2.20000, 2.92000, 3.64000, 4.52000, 5.64000, 6.40000, 8.28000])
	keys.append([ -0.06447, -0.27463, -0.28997, -0.26696, 0.22852, 0.16103, 0.59668, 0.59668, 0.15029, 0.21318])

	names.append("LWristYaw")
	times.append([ 0.04000, 0.76000, 1.56000, 2.20000, 2.92000, 3.64000, 4.52000, 5.64000, 6.40000, 8.28000])
	keys.append([ 0.56907, 0.60129, 0.60129, 0.60896, 0.59055, 0.59055, 0.59055, 1.78093, 1.79781, 1.79013])

	names.append("RAnklePitch")
	times.append([ 0.04000, 0.76000, 1.56000, 2.20000, 2.92000, 3.64000, 4.52000, 5.64000, 6.40000, 8.28000])
	keys.append([ -0.73628, -0.69486, -0.70100, 0.01998, -0.18404, -0.26841, -0.77923, -0.45095, -0.60282, -0.11501])

	names.append("RAnkleRoll")
	times.append([ 0.04000, 0.76000, 1.56000, 2.20000, 2.92000, 3.64000, 4.52000, 5.64000, 6.40000, 8.28000])
	keys.append([ 0.21020, -0.02450, -0.02450, -0.08279, -0.23159, -0.33284, 0.07214, -0.07052, -0.02143, 0.11049])

	names.append("RElbowRoll")
	times.append([ 0.04000, 0.76000, 1.56000, 2.20000, 2.92000, 3.64000, 4.52000, 5.64000, 6.40000, 8.28000])
	keys.append([ 0.16418, 0.18105, 0.03491, 0.05066, 0.62591, 0.65353, 0.59830, 0.06294, 0.05373, 0.11509])

	names.append("RElbowYaw")
	times.append([ 0.04000, 0.76000, 1.56000, 2.20000, 2.92000, 3.64000, 4.52000, 5.64000, 6.40000, 8.28000])
	keys.append([ 1.15966, 1.16426, 0.86974, 0.86667, 0.06285, -0.11663, 0.16563, 1.11057, 0.97251, 0.97251])

	names.append("RHand")
	times.append([ 0.04000, 0.76000, 1.56000, 2.20000, 2.92000, 3.64000, 4.52000, 5.64000, 6.40000, 8.28000])
	keys.append([ 0.00536, 0.00536, 0.00536, 0.00544, 0.00549, 0.00548, 0.00548, 0.00552, 0.01130, 0.01650])

	names.append("RHipPitch")
	times.append([ 0.04000, 0.76000, 1.56000, 2.20000, 2.92000, 3.64000, 4.52000, 5.64000, 6.40000, 8.28000])
	keys.append([ -1.20423, -1.33155, -1.34383, -1.53589, -1.53589, -1.29934, -1.53404, -1.44354, -0.62591, 0.05978])

	names.append("RHipRoll")
	times.append([ 0.04000, 0.76000, 1.56000, 2.20000, 2.92000, 3.64000, 4.52000, 5.64000, 6.40000, 8.28000])
	keys.append([ 0.36053, 0.36053, 0.36053, 0.33445, 0.33599, 0.32065, -0.06592, 0.15191, 0.02459, -0.10734])

	names.append("RHipYawPitch")
	times.append([ 0.04000, 0.76000, 1.56000, 2.20000, 2.92000, 3.64000, 4.52000, 5.64000, 6.40000, 8.28000])
	keys.append([ -1.14529, -1.14529, -1.14529, -1.07683, -1.14529, -1.06149, 0.08134, -0.52765, -0.36045, -0.03677])

	names.append("RKneePitch")
	times.append([ 0.04000, 0.76000, 1.56000, 2.20000, 2.92000, 3.64000, 4.52000, 5.64000, 6.40000, 8.28000])
	keys.append([ 2.11236, 2.11255, 2.11255, 1.67057, 2.11255, 2.11255, 2.11255, 2.10469, 1.54478, 0.11969])

	names.append("RShoulderPitch")
	times.append([ 0.04000, 0.76000, 1.56000, 2.20000, 2.92000, 3.64000, 4.52000, 5.64000, 6.40000, 8.28000])
	keys.append([ 0.68114, 0.66580, 0.68267, 0.64279, 0.30071, 0.36053, 0.20253, 2.05560, 1.04316, 1.56779])

	names.append("RShoulderRoll")
	times.append([ 0.04000, 0.76000, 1.56000, 2.20000, 2.92000, 3.64000, 4.52000, 5.64000, 6.40000, 8.28000])
	keys.append([ 0.14569, 0.09660, -0.23321, -0.26849, -0.51700, -0.53081, -0.75324, -0.29457, -0.11049, -0.17645])

	names.append("RWristYaw")
	times.append([ 0.04000, 0.76000, 1.56000, 2.20000, 2.92000, 3.64000, 4.52000, 5.64000, 6.40000, 8.28000])
	keys.append([ -0.14270, -0.14884, -0.10742, -0.11816, -0.09515, -0.09515, -0.09515, -0.19179, 0.35124, 0.59822])

	try:
	  motion.angleInterpolation(names, keys, times, True);
	except BaseException, err:
	  print err

