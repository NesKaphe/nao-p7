# Choregraphe simplified export in Python.
from naoqi import ALProxy
import almath
import time

def baisser(IP,PORT):
	names = list()
	times = list()
	keys = list()

	names.append("HeadPitch")
	times.append([ 0.20000, 1.12000, 2.04000, 3.80000, 5.92000, 6.80000])
	keys.append([ -0.17185, -0.17185, -0.20867, -0.17492, -0.15804, -0.15191])

	names.append("HeadYaw")
	times.append([ 0.20000, 1.12000, 2.04000, 3.80000, 5.92000, 6.80000])
	keys.append([ -0.00158, -0.00771, -0.00771, -0.02765, -0.01998, -0.01692])

	names.append("LAnklePitch")
	times.append([ 0.20000, 1.12000, 2.04000, 3.80000, 5.92000, 6.80000])
	keys.append([ 0.09660, 0.38959, 0.87127, 0.69179, 0.69179, 0.69179])

	names.append("LAnkleRoll")
	times.append([ 0.20000, 1.12000, 2.04000, 3.80000, 5.92000, 6.80000])
	keys.append([ -0.11654, -0.07052, 0.07981, -0.08433, -0.08586, -0.08433])

	names.append("LElbowRoll")
	times.append([ 0.20000, 1.12000, 2.04000, 3.80000, 5.92000, 6.80000])
	keys.append([ -0.43101, -1.05382, -1.54462, -1.52475, -1.20875, -0.80071])

	names.append("LElbowYaw")
	times.append([ 0.20000, 1.12000, 2.04000, 3.80000, 5.92000, 6.80000])
	keys.append([ -1.20883, -0.35900, -0.11202, -0.10129, 0.70867, 1.17654])

	names.append("LHand")
	times.append([ 0.20000, 1.12000, 2.04000, 3.80000, 5.92000, 6.80000])
	keys.append([ 0.00528, 0.01705, 0.01705, 0.01705, 0.01706, 0.01705])

	names.append("LHipPitch")
	times.append([ 0.20000, 1.12000, 2.04000, 3.80000, 5.92000, 6.80000])
	keys.append([ 0.13657, 0.20560, -0.87587, -1.30693, -1.30693, -1.46646])

	names.append("LHipRoll")
	times.append([ 0.20000, 1.12000, 2.04000, 3.80000, 5.92000, 6.80000])
	keys.append([ 0.11509, 0.12430, 0.08441, -0.34511, -0.34511, -0.34511])

	names.append("LHipYawPitch")
	times.append([ 0.20000, 1.12000, 2.04000, 3.80000, 5.92000, 6.80000])
	keys.append([ -0.17330, -0.72554, -1.13512, -1.14529, -1.14529, -1.14432])

	names.append("LKneePitch")
	times.append([ 0.20000, 1.12000, 2.04000, 3.80000, 5.92000, 6.80000])
	keys.append([ -0.09208, -0.09233, 0.51845, 0.62276, 0.62276, 0.62123])

	names.append("LShoulderPitch")
	times.append([ 0.20000, 1.12000, 2.04000, 3.80000, 5.92000, 6.80000])
	keys.append([ 1.47567, 0.57828, -0.12583, -0.09822, -0.95419, -0.64432])

	names.append("LShoulderRoll")
	times.append([ 0.20000, 1.12000, 2.04000, 3.80000, 5.92000, 6.80000])
	keys.append([ 0.12268, 0.46016, 0.22852, 0.22239, 0.33437, -0.23628])

	names.append("LWristYaw")
	times.append([ 0.20000, 1.12000, 2.04000, 3.80000, 5.92000, 6.80000])
	keys.append([ 0.08586, -0.94192, -1.19963, -1.21957, -0.29610, -0.40655])

	names.append("RAnklePitch")
	times.append([ 0.20000, 1.12000, 2.04000, 3.80000, 5.92000, 6.80000])
	keys.append([ 0.09975, -0.32363, -1.18630, -1.18630, -1.18630, -1.18630])

	names.append("RAnkleRoll")
	times.append([ 0.20000, 1.12000, 2.04000, 3.80000, 5.92000, 6.80000])
	keys.append([ 0.07367, 0.05220, -0.07512, 0.05066, 0.05066, 0.05066])

	names.append("RElbowRoll")
	times.append([ 0.20000, 1.12000, 2.04000, 3.80000, 5.92000, 6.80000])
	keys.append([ 0.36053, 0.03491, 0.03491, 0.03839, 0.04299, 0.06140])

	names.append("RElbowYaw")
	times.append([ 0.20000, 1.12000, 2.04000, 3.80000, 5.92000, 6.80000])
	keys.append([ 1.16273, 1.15506, 1.18421, 0.36658, 0.36505, 0.36965])

	names.append("RHand")
	times.append([ 0.20000, 1.12000, 2.04000, 3.80000, 5.92000, 6.80000])
	keys.append([ 0.00538, 0.00538, 0.00538, 0.00542, 0.00539, 0.00538])

	names.append("RHipPitch")
	times.append([ 0.20000, 1.12000, 2.04000, 3.80000, 5.92000, 6.80000])
	keys.append([ 0.13035, 0.03831, -0.30684, -0.71949, -0.71949, -0.71949])

	names.append("RHipRoll")
	times.append([ 0.20000, 1.12000, 2.04000, 3.80000, 5.92000, 6.80000])
	keys.append([ -0.06439, -0.17944, 0.03839, 0.36207, 0.36207, 0.36207])

	names.append("RHipYawPitch")
	times.append([ 0.20000, 1.12000, 2.04000, 3.80000, 5.92000, 6.80000])
	keys.append([ -0.17330, -0.72554, -1.13512, -1.14529, -1.14529, -1.14432])

	names.append("RKneePitch")
	times.append([ 0.20000, 1.12000, 2.04000, 3.80000, 5.92000, 6.80000])
	keys.append([ -0.09233, 0.70261, 2.11255, 1.96664, 1.96664, 1.96664])

	names.append("RShoulderPitch")
	times.append([ 0.20000, 1.12000, 2.04000, 3.80000, 5.92000, 6.80000])
	keys.append([ 1.54171, 1.63375, 0.90203, 0.35286, 0.34826, 0.31451])

	names.append("RShoulderRoll")
	times.append([ 0.20000, 1.12000, 2.04000, 3.80000, 5.92000, 6.80000])
	keys.append([ -0.15191, -0.56302, -0.33445, 0.11194, 0.09967, 0.04751])

	names.append("RWristYaw")
	times.append([ 0.20000, 1.12000, 2.04000, 3.80000, 5.92000, 6.80000])
	keys.append([ 0.11654, 0.69639, -0.19486, -0.19179, -0.19333, -0.17338])

	try:
	  # uncomment the following line and modify the IP if you use this script outside Choregraphe.
	  #motion = ALProxy("ALMotion", "192.168.1.3", 9559)
	  motion = ALProxy("ALMotion", IP, PORT)

	  motion.angleInterpolation(names, keys, times, True);
	except BaseException, err:
	  print err

def getKeyboardKey():
	pass

def brasGaucheEpaule(IP,PORT,ANGLE):
	try:
		motion = ALProxy("ALMotion", IP, PORT)
		print motion.getAngles("LShoulderRoll",True)
		names   = "LShoulderRoll"
		angles  = ANGLE*almath.TO_RAD
		frac    = 0.1 #10% de le vitesse max
		motion.setAngles(names,angles,frac)

	except Exception, err:
		print err

def main():
	IP = "192.168.1.3"
	PORT = 9559

    	posture = ALProxy("ALRobotPosture", IP, PORT)
	posture.goToPosture("StandInit",1)

	#baisser(IP,PORT)

	brasGaucheEpaule(IP,PORT,50)


main()








