vedredi 28 mars 2014
Fait:
-Commencer le module d'Analyse et le module de Mouvement
But : faire tourner la tete pour chercher la balle
-Dans l'Analyse :
	-il y a tout ce qui concerne le calibrage (peut être que 
	on va le déplacer dans un module spécialement fait pour)
	-il y a possibilité de sauvegarder et de réutiliser ce calibrage
	-permet de retourner la zone de la balle dans l'écran celon les repères x;y
-Dans le mouvement :
	-class Head :
		-incrAngles va recevoir les informations qur la zone à rechercher
		cette méthode va permettre de centre la balle dans la vision du
		robot

A faire :
	-terminer la recherche de balle avec la tete
	-ajouter le module decision avec le premier mode (chercher balle)
	-faire des mesures et implémenter la distance estimé de la balle
	-implémenter le mode déplacement vers balle :
		-tourner le corp du robot pour prendre la direction de la balle
		-aller vers la balle
	-implémenter le mode prise de balle :
		phase 1 mise en place du robot:
		pour ce faire il faut que 3 conditions soit remplit :
			-angle de la tête soit bon
			-position dans l'image bonne
			-distance de la balle bonne
		phase 2 ce mettre à "genoux"
		phase 3 prendre la balle

vendredi 14 mars 2014

Fait:
-Enregistrement avec chorégraphe du mouvement qui servira à ramasser une balle pour le nao
-Recherches sur le format d'images retourné par opencv afin de l'utiliser sur opencv:
	-Il faut utiliser la methode "fromstring" de numpy puis utiliser la methode "reshape"

A faire:
-Rendre fonctionnel le code existant avec la webcam du pc sur la caméra du nao

jeudi 13 mars 2014

Fait:
-Programme python utilisant opencv pour detection de balle avec une webcam :
	- Calibrage des couleurs à filtrer
	- Un cercle est dessiné autour de la balle detectée

Problème soulevé:
-La lumière change la couleur perçue par la webcam et empeche quelques fois la detection de la balle

A faire:
-Recherches pour utiliser la camera du nao à la place de la webcam du pc dans un programme utilisant opencv


vendredi 7 mars 2014, 15:26:10

Fait:
-Reflexion et conception d'une architecture du programme:
     .Trois modules principaux:
	-Analyse qui prend les informations des capteurs (tactiles, vision) et déclenche des evenements
	-Decision qui gère les évenements reçus par l'analyse. Il interagit avec le module d'analyse et d'action
	-Action qui effectue les mouvements demandés
     .Ces modules déclencheront et écouteront des évenements. Grâce à ce système nous pourrons traiter des informations de manière asynchrone.
	(Par exemple: Il sera possible de rechercher la balle pendant un déplacement)

A faire:
-Continuer à étudier opencv et commencer à faire des tests. L'objectif est de faire une détection de balle
-Faire le diagramme UML de l'architecture du programme  

jeudi 6 mars 2014, 18:08:23

Fait:
-Recherche et lecture de tutoriels sur opencv

A faire:
-Une architecture
-Un squelette de code (detection de balle, action avec la balle)


jeudi 27 février 2014, 18:09:35 (UTC+0100)

- regarder open CV (analyse d'image)
- commencer à faire des diagrammes UML
- avec des modules des sous modules


Thu Feb 20 15:21:13 CET 2014

Fait:
- Utiliser choregraphe pour tester les capteurs, les moteurs
- Programmer des mouvements de bras, se lever, parler.
- Comment apprendre un mouvement au Nao?

A faire:
- Comprendre le modèle d'événements de NaoQi.
- Réfléchir une architecture pour votre logiciel.
- Ecrire un programme qui reconnaît une balle rouge.


Thu Feb 13 15:53:56 CET 2014

Fait:
- Créer Gitlab
- Chercher le NaoQi sans le trouver.
- Regarder Python

A faire:
- Utiliser choregraphe pour tester les capteurs, les moteurs
- Comment apprendre un mouvement au Nao?

Thu Feb  6 14:41:05 CET 2014

Charasson Clement
Dias Alain

- La dernière version de la suite logicielle
- Vérifier la mise à jour du Nao.
- Gitlab
- Fixer un ou deux créneaux d'utilisation du Nao dans la semaine.

